#include <iostream>
#include<map>
using namespace std;

int main()
{
   multimap<int,string>Map;
   Map.insert({1,"Mahu"});
   Map.insert({2,"Mahudesh"});
   Map.insert({2,"Duplicate"});
   Map.erase(Map.find(2));
   for(auto ele : Map)
   cout<<ele.first<<" -> "<<ele.second<<" \n";

    return 0;
}MultiSet:

Implemented Using Balanced BST
Random Access Is Not Possible
Duplicate Elements Are Allowed
Only Accessed Via Iterators Because BST Is Used

Important Functions:

1 - insert()
2 - erase(value)
		   If The Input 1 2 2 3 4 5 then		
				
				myset.erase(2)-> Removes All the Occurrences Of 2 And The Output Is 1 3 4 5
				myset.erase(myset.find(2)) -> Removes Only First Occurrence Of 2 Since myset.find(2) Returns The First Occurrence Of 2 To The Iterator.

3 - find(value) ->Returns The Iterator To That Element
		  If The Input 1 2 2 3 4 5 then myset.find(2) will return the Iterator Only To First Occurrence Of 2;
		  
#include <iostream>
#include<set>
#include<iterator>

using namespace std;

int main()
{
    multiset<int>myset;
    myset.insert(1);
    myset.insert(2);
    myset.insert(2);
    myset.insert(3);
    myset.insert(4);
    myset.insert(5);
  //  myset.erase(2);
    myset.erase(myset.find(2));
    multiset<int> :: iterator it;
    for(it=myset.begin(); it!=myset.end(); it++)
    {
        cout<<*it<<" ";
    }
    
    
    

    return 0;
}