//Perfect Sum Problem
//If sum==0 then target value is present in the array
//If target = 8 then keep sum as 8 and subtract element at eacch index of the vector 
//If sum becomes zero then answer is present
#include<bits/stdc++.h>
using namespace std;
int subset(vector<int>&arr,int ind, int sum, int target)
{
    if(ind==arr.size())
    {
        if(sum==0)//Sum of the target is present after reaching the leaf node
        return 1;
        else if(sum>0 || sum<0)//Sum of the target is not present after reaching the leaf node
        return 0;
    }
    return subset(arr,ind+1,sum,target)+subset(arr,ind+1,sum-arr[ind],target);
}
int main()
{
    vector<int>arr={2,5,6,1};
    int sum=8;
    int target=8;
    cout<<subset(arr,0,sum,target);
}