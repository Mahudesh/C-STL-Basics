#include<bits/stdc++.h>
using namespace std;
class Node
{
    public:
    int data;
    Node* next;
    
    public:
    Node(int data)
    {
        this->data=data;
        next=nullptr;
    }
};

Node* createLinkedList(vector<int>&arr)
{
    if(arr.size()==0) return nullptr;
    Node* head=new Node(arr[0]);
    Node* mover=head;
    for(int i=1;i<arr.size();i++)
    {
        Node* temp=new Node(arr[i]);
        mover->next=temp;
        mover=temp;
    }
    return head;
    
}

Node* insertAtPosition(Node* head, int value, int k)
{
    //If there is no linked list, then insert directly by creating a new Node
    //Also check if the insert position is k=1
    if(head==nullptr)
    {
        if(k==1)
        {
            head=new Node(value);
            return head;
        }
        cout<<"No linked list, so cant add the value at any position other than 1";
    }
    //If the insert position is 1, then insertbeg has to be done
    if(k==1)
    {
        Node* newnode=new Node(value);
        newnode->next=head;
        head=newnode;
        return head;
    }
    int cnt=0;
    Node* temp=head;
    while(temp!=nullptr)
    {
        cnt++;
        if(cnt==k-1)
        {
            Node* newnode=new Node(value);
            newnode->next=temp->next;
            temp->next=newnode;
            break;
        }
        temp=temp->next;
    }
    return head;
}
void print(Node* head)
{
    Node* temp=head;
    while(temp!=nullptr)
    {
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main()
{
    vector<int>arr={1,2,3,4,5,6,7,8,9};
    Node* head=createLinkedList(arr);
    int value=76;
 //   head=insertbeg(head,value);
   // head=insertlast(head,value);
   head=insertAtPosition(head,value,2);
   print(head);
 
}